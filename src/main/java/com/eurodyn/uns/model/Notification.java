/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is Unified Notification System
 * 
 * The Initial Owner of the Original Code is European Environment
 * Agency (EEA).  Portions created by European Dynamics (ED) company are
 * Copyright (C) by European Environment Agency.  All Rights Reserved.
 * 
 * Contributors(s):
 *    Original code: Sasha Milosavljevic (ED) 
 */

package com.eurodyn.uns.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Notification generated by hbm2java
 */

public class Notification implements java.io.Serializable {

    private static final long serialVersionUID = -627978637993389871L;
    // Fields   
    private int id;

    private int userId;

    private long eventId;

    private String content;
    
    private String htmlContent;

    private int channelId;

    private String subject;
    
    private Set deliveries = new HashSet(0);

    private User user;
    
    private Event event;
    
    private String deliveryAddress;
    
    private int failed;
    
    private int deliveryTypeId;
    
    // Constructors

    /** default constructor */
    public Notification() {
    }

    /** minimal constructor */
    public Notification(int id, int userId, long eventId, String content, String htmlContent, int channelId) {
        this.id = id;
        this.userId = userId;
        this.eventId = eventId;
        this.content = content;
        this.htmlContent = htmlContent;
        this.channelId = channelId;
    }

    /** full constructor */
    public Notification(int id, int userId, long eventId, String content, String htmlContent, int channelId, String subject, Set deliveries) {
        this.id = id;
        this.userId = userId;
        this.eventId = eventId;
        this.content = content;
        this.htmlContent = htmlContent;
        this.channelId = channelId;
        this.subject = subject;
        this.deliveries = deliveries;
    }

    // Property accessors

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getuserId() {
        return this.userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public long getEventId() {
        return this.eventId;
    }

    public void seteventId(long eventId) {
        this.eventId = eventId;
    }

    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getHtmlContent() {
        return htmlContent;
    }

    public void setHtmlContent(String htmlContent) {
        this.htmlContent = htmlContent;
    }

    public int getChannelId() {
        return this.channelId;
    }

    public void setChannelId(int channelId) {
        this.channelId = channelId;
    }

    public String getSubject() {
        return this.subject;
    }

    public void setSubject(String subject) {
        this.subject = subject;
    }

    public Set getDeliveries() {
        return this.deliveries;
    }

    public void setDeliveries(Set deliveries) {
        this.deliveries = deliveries;
    }

    public User getUser() {
        return user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    public Event getEvent() {
        return event;
    }

    public void setEvent(Event event) {
        this.event = event;
    }

    public String getDeliveryAddress() {
        return deliveryAddress;
    }

    public void setDeliveryAddress(String deliveryAddress) {
        this.deliveryAddress = deliveryAddress;
    }

    public int getFailed() {
        return failed;
    }

    public void setFailed(int failed) {
        this.failed = failed;
    }

    public int getDeliveryTypeId() {
        return deliveryTypeId;
    }

    public void setDeliveryTypeId(int deliveryTypeId) {
        this.deliveryTypeId = deliveryTypeId;
    }

    @SuppressWarnings("unchecked")
    public List getDeliveriesList() {
        return deliveries == null ? Collections.emptyList() : new ArrayList<Delivery>(deliveries);
    }

    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + channelId;
        result = prime * result + ((content == null) ? 0 : content.hashCode());
        result = prime * result
                + ((deliveries == null) ? 0 : deliveries.hashCode());
        result = prime * result
                + ((deliveryAddress == null) ? 0 : deliveryAddress.hashCode());
        result = prime * result + deliveryTypeId;
        result = prime * result + ((event == null) ? 0 : event.hashCode());
        result = prime * result + (int) (eventId ^ (eventId >>> 32));
        result = prime * result + failed;
        result = prime * result
                + ((htmlContent == null) ? 0 : htmlContent.hashCode());
        result = prime * result + id;
        result = prime * result + ((subject == null) ? 0 : subject.hashCode());
        result = prime * result + ((user == null) ? 0 : user.hashCode());
        result = prime * result + userId;
        return result;
    }

    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Notification other = (Notification) obj;
        if (channelId != other.channelId)
            return false;
        if (content == null) {
            if (other.content != null)
                return false;
        } else if (!content.equals(other.content))
            return false;
        if (deliveries == null) {
            if (other.deliveries != null)
                return false;
        } else if (!deliveries.equals(other.deliveries))
            return false;
        if (deliveryAddress == null) {
            if (other.deliveryAddress != null)
                return false;
        } else if (!deliveryAddress.equals(other.deliveryAddress))
            return false;
        if (deliveryTypeId != other.deliveryTypeId)
            return false;
        if (event == null) {
            if (other.event != null)
                return false;
        } else if (!event.equals(other.event))
            return false;
        if (eventId != other.eventId)
            return false;
        if (failed != other.failed)
            return false;
        if (htmlContent == null) {
            if (other.htmlContent != null)
                return false;
        } else if (!htmlContent.equals(other.htmlContent))
            return false;
        if (id != other.id)
            return false;
        if (subject == null) {
            if (other.subject != null)
                return false;
        } else if (!subject.equals(other.subject))
            return false;
        if (user == null) {
            if (other.user != null)
                return false;
        } else if (!user.equals(other.user))
            return false;
        if (userId != other.userId)
            return false;
        return true;
    }
}
