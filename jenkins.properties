###########################################################
#
# UNS configuration parameters
#
############################################################


# uns.home    Home directory of the UNS installation where configuration
#             and logging files are stored. Ant will create this directory in the
#             "prepare" target. The uns-config.xml configuration file is located
#             in this folder and need to be configured manualy or by using UNS Administrative user interface.
#             NOTE: This directory shall not be directory of your Tomcat codebase e.g webapps.
#
uns.home=/tmp/uns-home

# These two properties simply repeat the value of "uns.home" for backward compatibility.
app.home=${uns.home}
UNS_HOME=${uns.home}

#  app.name   Name of the application. This name will be used as name for Web application (WAR) archive.
#             If you would like to install the UNS into ROOT application context this name must be ROOT.
#             Default name is set to ROOT already.
#
#app.name=ROOT


#  context.path         Context path to which this application should be
#                       deployed.
#context.path=/


# catalina.home   The directory where a binary distribution of Tomcat 5 is installed.
#                 The Ant "compile" target will search this directory in order to find needed J2EE libraries.
#
#catalina.home=/var/lib/tomcat5

# ldap.url             The URL of the EIONET ldap service as is used in the
#                      EIONET directory service library.
#
ldap.url=ldap://${docker.host.address}:10389

# The principal for logging onto LDAP (see javax.naming.Context.SECURITY_PRINCIPAL). The authentication mechanism will be "simple" (see javax.naming.Context.SECURITY_AUTHENTICATION).
ldap.principal=test

# The password for the principal identified by ldap.principal. See see javax.naming.Context.SECURITY_CREDENTIALS.
ldap.password=test

# Database configuration
#db.driver=com.mysql.jdbc.Driver
#db.user=testuser
#db.password=testpassword
#db.url=jdbc:mysql://${docker.host.address}:53336/uns_test\
#  ?createDatabaseIfNotExist=true\
#  &server.initialize-user=true

# uns_python_source.home  Home directory of the UNS python source code
#                         It will be created by the ant "prepare" target
#                         All the UNS python source including daemons will be stored here.
uns_python_source.home=${uns.home}/uns-python-source

#python.home           Location of the python interpreter
python.home=/usr/bin/python

#jython.home           The home directory of the jython installation
jython.home=

#uns.url               The web address of the UNS application. This link will
#                      be send together with notifications for easy unsubscibing
#                      service.
uns.url=http://${docker.host.address}

# The value of this property will populate the same-named <init-param> of the CAS Filter in web.xml
edu.yale.its.tp.cas.client.filter.serverName=${docker.host.address}

# JDBC settings for unit tests
# To connect manually do: mysql -u testuser -ptestpassword -S /tmp/mysql-c.mxj/data/mysql.sock uns_test
db.driver=com.mysql.jdbc.Driver
db.host=${docker.host.address}
db.port=53336
db.database=uns_test
db.connectTimeoutMillis=50
db.url=jdbc:mysql://${docker.host.address}:53336/uns_test\
  ?createDatabaseIfNotExist=true\
  &useUnicode=true\
  &characterEncoding=UTF-8\
  &server.initialize-user=true
db.url.xmlEscaped=jdbc:mysql://${docker.host.address}:53336/uns_test\
  ?createDatabaseIfNotExist=true\
  &amp;useUnicode=true\
  &amp;characterEncoding=UTF-8\
  &amp;server.initialize-user=true
db.user=testuser
db.password=testpassword

# Also works with H2 database
#db.unittest.driver=org.h2.Driver
#db.unittest.url=jdbc:h2:mem:uns_test
#db.unittest.url.xmlEscaped=jdbc:h2:mem:uns_test
#db.unittest.user=unsuser
#db.unittest.password=xxx

# Events that UNS hasn't seen this much days in any feed shall be purged. So it's a number and the unit is days.
oldEventsThreshold=60

# Additional database connection related properties required by uns-config.xml.
#db.host=localhost
#db.port=3306
#db.database=uns_test
#db.connectTimeoutMillis=50

# Properties related to the Jabber server used for sending IM notifications. Leave host empty to disable Jabber notifications.
jabber.host=
jabber.port=5222
jabber.username=user
jabber.password=sasacc
jabber.useSSL=false
jabber.message_type=headline

# Properties related to the SMTP server used for sending e-mail notifications. Leave host empty to disable e-mail notifications.
smtp.host=
smtp.port=25
smtp.username=user
smtp.password=pass
smtp.useAuthentication=false

# Properties related to the POP3 server used for retrieving failed e-mail notifications (sent to "pop3.adminMail").
pop3.host=
pop3.port=110
pop3.username=user
pop3.password=pass
pop3.adminMail=testadmin@some.com

# Interval at which the notificator job should be run. Given in minutes.
notificator.intervalMinutes=5

# Interval at which the events harvester should be run. Given in minutes.
harvester.intervalMinutes=3

# Number of threads that the events harvester should use.
harvester.noOfThreads=5

# Set to "false" if you want to control UNS daemons from UI/Zope. Set to "true" for controlling them via unsd.sh shell script.
daemons.manualControl=true

# UNS will generate feeds containing events retrieved last "events.feedAge" days.
events.feedAge=5

# Level of UNS business log used by the Python code. For UNS Java code, the classic log4j.properties is used.
businessLog.level=INFO


